Aliza Camero
Assignment 2 (Design):
Do not implement any code this week!
Based on what we know about linked lists, stacks, and queues, design a queue data structure:

1.	What functions are we likely to need for a queue to function like the one discussed in class?
To implement an array stack, we are likely to use functions add(x), pop(), get(x). 
2.	What values will we need to know about the structure for our queue to function properly?
We need to know what value gets popped with the pop() function. And where adding an element goes, to the top or bottom?

1.	Based on what we know about linked lists, design a list data structure that allows us to add (insert) or remove (delete) values at a given location in the list (instead of the top of a stack or the front or back of a queue):
An Array Queue is a list data structure that lets you add and remove values at a given location in the array rather than the 
top or bottom.

2.	What functions are we likely to need for a list to function like this?
add(x), remove() by setting the array [] then adding an array length or {2, 4, 5, 6}
3.	What values will we need to know about the structure for our list to function properly?
We need to know if the array exists, if the array has values already. So then when we add values, we know what range we can input values in.

1.	Commit changes to your design into your git repo frequently while designing (in an obvious assignment 2 folder or repo),
(Also remember to double check that I am a collaborator on your project or the git repo is otherwise accessible by the instructor)
